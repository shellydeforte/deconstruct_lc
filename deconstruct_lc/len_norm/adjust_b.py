import configparser
import os
import pandas as pd
import numpy as np
from scipy.stats import linregress
from deconstruct_lc import tools_lc
from deconstruct_lc.svm import svms
from deconstruct_lc.scores import calc_score


config = configparser.ConfigParser()
cfg_fp = os.path.join(os.path.join(os.path.dirname(__file__), '..',
                                   'config.cfg'))
config.read_file(open(cfg_fp, 'r'))


class AdjustB(object):
    def __init__(self):
        self.train_fpi = config['filepaths']['train_fp']

    def find_hyperplane(self):
        df = pd.read_csv(self.train_fpi, sep='\t', index_col=0)
        seqs = list(df['Sequence'])
        cs = calc_score.CalcScore(seqs)
        lc_norm = cs.lc_norm_score()
        X = np.array([lc_norm]).T
        y = np.array(df['y']).T
        clf = svms.linear_svc(X, y)
        x = np.arange(0, 30, 0.1).reshape(1, -1).T
        print(x)
        print(list(clf.decision_function(x)))

    def hp(self):
        dec_fun = [1.0247425971358444, 1.0178060404511364, 1.0108694837664285, 1.0039329270782529, 0.99699637039701261, 0.99005981371115648, 0.98312325702066139, 0.97618670035504773, 0.96925014365818085, 0.96231358697743263, 0.95537703028646859, 0.94844047359144201, 0.94150391690547841, 0.93456736018873765, 0.92763080357425109, 0.92069424692466462, 0.91375769018051733, 0.90682113347320814, 0.8998845768190209, 0.8929480201554918, 0.88601146343709281, 0.87907490676606037, 0.87213835004703966, 0.86520179337248293, 0.85826523667511245, 0.85132868024280817, 0.84439212324163093, 0.83745556670926802, 0.83051901001265782, 0.8235824533001439, 0.81664589671348486, 0.80970933996120897, 0.8027727832251903, 0.79583622659868047, 0.78889966981057191, 0.781963113015262, 0.77502655650219743, 0.76808999980646653, 0.76115344317513922, 0.75421688652333763, 0.74728032973834124, 0.74034377307032861, 0.73340721639627637, 0.72647065968120095, 0.71953410295823494, 0.71259754639302364, 0.70566098960912149, 0.69872443299144726, 0.69178787621438054, 0.68485131981982739, 0.67791476334977196, 0.67097820632542216, 0.6640416493474175, 0.65710509280754414, 0.65016853628269167, 0.64323197975367896, 0.63629542288947127, 0.6293588661857219, 0.62242230946444344, 0.61548575273328132, 0.60854919629112536, 0.60161263950541488, 0.59467608278657358, 0.58773952606432878, 0.58080296931453623, 0.573866412730627, 0.56692985606151658, 0.5599932993229364, 0.55305674248529946, 0.54612018593346412, 0.53918362889467963, 0.53224707240593339, 0.52531051586855049, 0.51837395929976871, 0.51143740247708869, 0.50450084561640884, 0.49756428921443407, 0.49062773256006742, 0.48369117591083088, 0.47675461919398621, 0.46981806234083812, 0.46288150546790852, 0.45594494900481286, 0.44900839249855173, 0.44207183565670838, 0.43513527888336845, 0.42819872222655753, 0.42126216556621521, 0.41432560878062552, 0.40738905248351975, 0.40045249565020291, 0.39351593897898218, 0.38657938208239861, 0.37964282564295693, 0.37270626884705016, 0.36576971188975782, 0.35883315529291671, 0.35189659849794075, 0.3449600425038104, 0.33802348546108951, 0.33108692956369956, 0.3241503721158272, 0.31721381551499994, 0.31027725885807533, 0.30334070155899062, 0.29640414542567917, 0.28946758847924392, 0.28253103182129613, 0.27559447542953897, 0.26865791827745134, 0.26172136237151356, 0.25478480523095803, 0.24784824864309818, 0.24091169158201686, 0.23397513523559943, 0.22703857836112085, 0.2201020217930425, 0.21316546472445785, 0.20622890833071827, 0.1992923517687506, 0.19235579544640635, 0.18541923840566077, 0.17848268187498539, 0.17154612461958485, 0.16460956843730279, 0.15767301136667178, 0.15073645499281318, 0.14379989805042093, 0.1368633414932281, 0.12992678484158993, 0.12299022832540962, 0.11605367113329002, 0.10911711498718879, 0.10218055777092494, 0.095244001510028431, 0.088307444757720566, 0.081370887834754546, 0.074434331263805609, 0.06749777473108387, 0.060561217969851588, 0.0536246606535149, 0.046688104729998292, 0.039751547676022403, 0.032814990812130906, 0.025878434601256606, 0.0189418783291051, 0.012005321463693042, 0.0050687644566698165, -0.001867792181666994, -0.0088043485698927615, -0.015740905903026681, -0.022677462814027161, -0.02961401870697622, -0.036550575432283461, -0.043487132015709529, -0.050423688793142185, -0.057360245314182601, -0.064296802566726763, -0.071233358747871955, -0.078169916247386562, -0.085106472454168136, -0.09204302937919473, -0.098979586200027336, -0.10591614218635592, -0.11285269912621865, -0.11978925582512212, -0.1267258121387409, -0.13366236906473383, -0.14059892582242761, -0.14753548285403562, -0.15447203936910747, -0.16140859642760241, -0.16834515268272932, -0.17528170933560383, -0.18221826600341395, -0.18915482230691461, -0.19609137957459333, -0.2030279359681908, -0.20996449216880486, -0.21690104904336871, -0.22383760583543855, -0.23077416250637506, -0.23771071917788, -0.24464727642799411, -0.25158383297104714, -0.25852038874004912, -0.26545694584993051, -0.27239350300324028, -0.27933005944174405, -0.28626661619454929, -0.29320317335632873, -0.3001397298652615, -0.30707628655001096, -0.31401284256054063, -0.32094940013996287, -0.32788595660234088, -0.33482251212822356, -0.3417590696488555, -0.34869562621366534, -0.35563218266736052, -0.36256873800844525, -0.36950529714740932, -0.37644185290418997, -0.38337841022467622, -0.39031496610584449, -0.3972515227706277, -0.4041880794196937, -0.41112463636313756, -0.41806119401786312, -0.42499775021348918, -0.43193430628448604, -0.43887086313784729, -0.44580742017735653, -0.45274397632936947, -0.45968053349325211, -0.46661709000570917, -0.47355364627676644, -0.48049020334788062, -0.4874267605809417, -0.49436331619379481, -0.50129987239281726, -0.50823643064475399, -0.5151729866739283, -0.5221095434778642, -0.52904609984964801, -0.53598265675672629, -0.54291921397181064, -0.54985577021609466, -0.55679232666464551, -0.56372888394501453, -0.57066544041360268, -0.57760199704649673, -0.58453855354975937, -0.59147511042520429, -0.59841166768692866, -0.6053482241513104, -0.61228478047440782, -0.61922133784441891, -0.62615789359834317, -0.63309445017919708, -0.64003100624303166, -0.6469675641628323, -0.65390412032452283, -0.66084067663460311, -0.66777723338587358, -0.67471379044094371, -0.68165034789667467, -0.68858690379392962, -0.69552346026123879, -0.70246001716166639, -0.70939657440250081, -0.71633313085187589, -0.723269687150218, -0.73020624394676426, -0.73714280103500252, -0.74407935709133377, -0.75101591414938818, -0.75795247092589713, -0.76488902745266452, -0.77182558477265339, -0.77876214048502512, -0.78569869837913253, -0.79263525486926434, -0.79957181088625995, -0.80650836716146679, -0.81344492492918286, -0.82038148159399449, -0.82731803713597807, -0.83425459411578751, -0.84119115078605611, -0.84812770762040324, -0.85506426497290655, -0.86200082146633528, -0.86893737712805952, -0.87587393460823315, -0.88281049099317621, -0.88974704767367663, -0.89668360491988275, -0.90362016119614119, -0.91055671824646489, -0.91749327582881457, -0.92442983188693639, -0.93136638767584778, -0.93830294486893373, -0.94523950178379956, -0.95217605829817509, -0.95911261551158256, -0.96604917119669786, -0.97298572793333116, -0.97992228555009953, -0.98685884047763417, -0.99379539786111715, -1.0007319542084583, -1.0076685120876443, -1.0146050682225047, -1.0215416249748268, -1.0284781814991784, -1.035414738441329, -1.0423512942756299, -1.0492878519089965]
        x = list(np.arange(0, 30, 0.1))
        for h, i, in zip(dec_fun, x):
            print(h)
            print(i)


def main():
    ab = AdjustB()
    ab.hp()
    #x = np.arange(0, 30, 0.1).reshape(1, -1).T
    #print(x.shape)
    #ab = AdjustB()
    #ab.find_hyperplane()


if __name__ == '__main__':
    main()